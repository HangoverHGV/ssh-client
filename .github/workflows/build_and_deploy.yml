name: Build and Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-linux.txt
        sudo apt-get update
        sudo apt-get install -y ruby ruby-dev rubygems build-essential
        sudo gem install --no-document fpm

    - name: Build the application
      run: |
        pyinstaller --onefile --noconsole main.py

    - name: Create .deb package
      run: |
        chmod +x build_deb.sh
        ./build_deb.sh
    - name: Delete existing tag
      uses: actions/github-script@v6
      with:
        script: |
          const tagName = 'v1.0.0';
          try {
            await github.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `tags/${tagName}`
            });
          } catch (error) {
            if (error.status !== 404) {
              throw error;
            }
          }

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ssh-manager_1.0.0_amd64.deb
        asset_name: ssh-manager_1.0.0_amd64.deb
        asset_content_type: application/x-debian-package
